diff --git a/CMakeLists.txt b/CMakeLists.txt
index cb6a7f3..d0924fe 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -505,25 +505,6 @@ if(NOT CAF_NO_OPENSSL)
               "Disable OpenSSL. Required >= 1.0.1 due to TLSv1.2 support.")
       set(CAF_NO_OPENSSL yes)
     else()
-      if(NOT CMAKE_CROSSCOMPILING)
-        # Check if openssl headers and library versions match
-        set(CMAKE_REQUIRED_LIBRARIES ${OPENSSL_LIBRARIES})
-        set(CMAKE_REQUIRED_INCLUDES ${OPENSSL_INCLUDE_DIR})
-        check_c_source_runs("
-          #include <openssl/opensslv.h>
-          #include <openssl/crypto.h>
-          int main() {
-            if (SSLeay() == OPENSSL_VERSION_NUMBER) {
-              return 0;
-            }
-            return -1;
-          }
-        " OPENSSL_CORRECT_VERSION_NUMBER)
-        if (NOT OPENSSL_CORRECT_VERSION_NUMBER)
-          message(FATAL_ERROR
-            "OpenSSL library version does not match headers")
-        endif()
-      endif()
       include_directories(BEFORE ${OPENSSL_INCLUDE_DIR})
       add_optional_caf_lib(openssl)
     endif()
diff --git a/libcaf_core/CMakeLists.txt b/libcaf_core/CMakeLists.txt
index 15ef0e0..300c9a5 100644
--- a/libcaf_core/CMakeLists.txt
+++ b/libcaf_core/CMakeLists.txt
@@ -142,10 +142,12 @@ list(APPEND LIBCAF_CORE_HDRS
 
 add_custom_target(libcaf_core)
 
+find_package(Threads)
+
 # build shared library if not compiling static only
 if (NOT CAF_BUILD_STATIC_ONLY)
   add_library(libcaf_core_shared SHARED ${LIBCAF_CORE_SRCS} ${LIBCAF_CORE_HDRS})
-  target_link_libraries(libcaf_core_shared ${CAF_EXTRA_LDFLAGS})
+  target_link_libraries(libcaf_core_shared ${CAF_EXTRA_LDFLAGS} ${CMAKE_THREAD_LIBS_INIT})
   target_include_directories(libcaf_core_shared PUBLIC
     $<BUILD_INTERFACE:${CMAKE_CURRENT_BINARY_DIR}>
     $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>
@@ -167,7 +169,7 @@ endif ()
 # build static library only if --build-static or --build-static-only was set
 if (CAF_BUILD_STATIC_ONLY OR CAF_BUILD_STATIC)
   add_library(libcaf_core_static STATIC ${LIBCAF_CORE_HDRS} ${LIBCAF_CORE_SRCS})
-  target_link_libraries(libcaf_core_static ${CAF_EXTRA_LDFLAGS})
+  target_link_libraries(libcaf_core_static ${CAF_EXTRA_LDFLAGS} ${CMAKE_THREAD_LIBS_INIT})
   target_include_directories(libcaf_core_static PUBLIC
     $<BUILD_INTERFACE:${CMAKE_CURRENT_BINARY_DIR}>
     $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>
